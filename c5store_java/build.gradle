plugins {
  id 'maven-publish'
  id 'signing'
  id 'java'
  id 'se.patrikerdes.use-latest-versions' version '0.2.18'
  id 'com.github.ben-manes.versions' version '0.39.0'
}

ext {
  jacksonVersion = '2.13.0'
  jacocoVersion = '0.8.7'
  junitVersion = '5.8.2'
  logbackVersion = '1.3.0-alpha10'
  slf4jVersion = '2.0.0-alpha5'
}

task buildAll(type: GradleBuild) {
  tasks = [ 'build' ]
}

allprojects {
  apply plugin: 'se.patrikerdes.use-latest-versions'
  apply plugin: 'com.github.ben-manes.versions'

  group 'com.excsn.c5store'
  version = '1.0.0-SNAPSHOT'

  configurations {
    all {
      exclude group: 'commons-logging', module: 'commons-logging'
    }
  }
}

subprojects {

  apply plugin: 'java-library'
  apply plugin: 'jacoco'
  apply plugin: "maven-publish"

  sourceCompatibility = 1.11
  targetCompatibility = 1.11

  tasks.withType(JavaCompile) {

    options.encoding = 'UTF-8'
    options.incremental = true
    options.verbose = false
  }

  java {

    modularity.inferModulePath.set(true)
  }


  apply plugin: 'idea'

  idea {
    module {
      inheritOutputDirs = false
      outputDir file('out/production/classes')
      testOutputDir file('out/test/classes')
      downloadJavadoc = true
      downloadSources = true
    }
  }

  processResources.duplicatesStrategy = DuplicatesStrategy.INCLUDE
  processTestResources.duplicatesStrategy = DuplicatesStrategy.INCLUDE

  afterEvaluate {

    compileJava {

      inputs.property("moduleName", moduleName)
      doFirst {
        options.compilerArgs += [
          '--module-path', classpath.asPath,
        ]

        classpath = files()
      }
    }

    javadoc {

      inputs.property("moduleName", moduleName)
      options.modulePath = classpath.asList()
    }
  }

  sourceSets {
    main {
      java {
        srcDir 'src/main/java'
      }
      resources {
        srcDir 'src/main/resources'
      }
    }
    test {
      java {
        srcDir 'src/test/java'
      }
      resources {
        srcDir 'src/test/resources'
      }
    }
  }

  javadoc {

    options.addStringOption('Xdoclint:none', '-quiet')
    options.addBooleanOption('html5', true)
    options.tags('apiNote:a:API Note:')
    options.tags('implSpec:a:Implementation Requirements:')
    options.tags('implNote:a:Implementation Note:')
    options.tags('param')
    options.tags('return')
    options.tags('throws')
    options.tags('since')
    options.tags('version')
    options.tags('serialData')
    options.tags('factory')
    options.tags('see')

    // The below doesn't work for some reason
    //options.taglets('build.tools.taglet.ModuleGraph')
  }

  jacoco {
    toolVersion = jacocoVersion
    reportsDir = file("$buildDir/reports/jacoco")
  }

  jacocoTestReport {
    reports {

      xml.enabled false
      csv.enabled false
      html.destination file("$buildDir/reports/jacoco/html")
    }
  }

  test {
    useJUnitPlatform()

    jacoco {
      destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
      classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }

    testLogging {
      events 'PASSED', 'FAILED', 'SKIPPED'
    }

    afterSuite { desc, result ->
      if (!desc.parent) {
        println "\nTest result: ${result.resultType}"
        println "Test summary: ${result.testCount} tests, " +
          "${result.successfulTestCount} succeeded, " +
          "${result.failedTestCount} failed, " +
          "${result.skippedTestCount} skipped"
      }
    }
  }

  task sourcesJar(type: Jar, dependsOn: classes) {

    archiveClassifier = 'sources'
    from sourceSets.main.java.srcDirs
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {

    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
  }

  artifacts {
    archives sourcesJar
    archives javadocJar
  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url "https://oss.sonatype.org/content/repositories/snapshots"
      mavenContent {
        snapshotsOnly()
      }
    }
  }

  publishing {
    publications {

      mavenJava(MavenPublication) {

        from components.java
        artifact tasks.sourcesJar
        artifact tasks.javadocJar

        pom {
          name = project.name
          description = project.description
          licenses {
            license {
              name = 'Mozilla Public License Version 2.0'
              url = 'https://www.mozilla.org/en-US/MPL/2.0/'
            }
          }
          developers {
            developer {
              id = 'normano'
              name = 'Norm O.'
              email = 'normo.pub@gmail.com'
            }
          }
          scm {
            url = 'https://github.com/normano/c5store'
          }
        }
      }
    }

    repositories {
      maven {

        name "ossrhRepo"

        def snapshotUrl = "https://oss.sonatype.org/content/repositories/snapshots"
        def releaseUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
        url version.endsWith("-SNAPSHOT") ? snapshotUrl : releaseUrl

        credentials {

          username ossrhUser
          password ossrhPassword
        }
      }
    }
  }

  tasks.publish.enabled = false

  dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    implementation group: 'ch.qos.logback', name: 'logback-core', version: logbackVersion
    implementation group: 'org.slf4j', name: 'log4j-over-slf4j', version: slf4jVersion
    implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion

    implementation group: 'com.excsn.security.crypto', name: 'ecies_25519', version: '1.0-SNAPSHOT'

    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.5.0'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.29'

    implementation group: 'uk.com.robust-it', name: 'cloning', version: '1.9.12'
    implementation (group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2') {
      exclude group: 'javax.annotation'
    }

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    testRuntimeOnly group: 'org.junit.jupiter', name:'junit-jupiter-engine', version: junitVersion
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.1.0'
  }
}

signing {
  sign publishing.publications
}